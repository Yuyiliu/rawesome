{-# LANGUAGE BangPatterns, DeriveDataTypeable, FlexibleInstances, MultiParamTypeClasses #-}
module Kite (protoInfo, fileDescriptorProto) where
import Prelude ((+), (/))
import qualified Prelude as Prelude'
import qualified Data.Typeable as Prelude'
import qualified Data.Data as Prelude'
import qualified Text.ProtocolBuffers.Header as P'
import Text.DescriptorProtos.FileDescriptorProto (FileDescriptorProto)
import Text.ProtocolBuffers.Reflections (ProtoInfo)
import qualified Text.ProtocolBuffers.WireMessage as P' (wireGet,getFromBS)
 
protoInfo :: ProtoInfo
protoInfo
 = Prelude'.read
    "ProtoInfo {protoMod = ProtoName {protobufName = FIName \".kite\", haskellPrefix = [], parentModule = [], baseName = MName \"Kite\"}, protoFilePath = [\"Kite.hs\"], protoSource = \"kite.proto\", extensionKeys = fromList [], messages = [DescriptorInfo {descName = ProtoName {protobufName = FIName \".kite.Xyz\", haskellPrefix = [], parentModule = [MName \"Kite\"], baseName = MName \"Xyz\"}, descFilePath = [\"Kite\",\"Xyz.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".kite.Xyz.x\", haskellPrefix' = [], parentModule' = [MName \"Kite\",MName \"Xyz\"], baseName' = FName \"x\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 9}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 1}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".kite.Xyz.y\", haskellPrefix' = [], parentModule' = [MName \"Kite\",MName \"Xyz\"], baseName' = FName \"y\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 17}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 1}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".kite.Xyz.z\", haskellPrefix' = [], parentModule' = [MName \"Kite\",MName \"Xyz\"], baseName' = FName \"z\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 25}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 1}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".kite.Dcm\", haskellPrefix = [], parentModule = [MName \"Kite\"], baseName = MName \"Dcm\"}, descFilePath = [\"Kite\",\"Dcm.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".kite.Dcm.r11\", haskellPrefix' = [], parentModule' = [MName \"Kite\",MName \"Dcm\"], baseName' = FName \"r11\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 9}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 1}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".kite.Dcm.r12\", haskellPrefix' = [], parentModule' = [MName \"Kite\",MName \"Dcm\"], baseName' = FName \"r12\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 17}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 1}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".kite.Dcm.r13\", haskellPrefix' = [], parentModule' = [MName \"Kite\",MName \"Dcm\"], baseName' = FName \"r13\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 25}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 1}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".kite.Dcm.r21\", haskellPrefix' = [], parentModule' = [MName \"Kite\",MName \"Dcm\"], baseName' = FName \"r21\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 33}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 1}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".kite.Dcm.r22\", haskellPrefix' = [], parentModule' = [MName \"Kite\",MName \"Dcm\"], baseName' = FName \"r22\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 41}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 1}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".kite.Dcm.r23\", haskellPrefix' = [], parentModule' = [MName \"Kite\",MName \"Dcm\"], baseName' = FName \"r23\"}, fieldNumber = FieldId {getFieldId = 6}, wireTag = WireTag {getWireTag = 49}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 1}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".kite.Dcm.r31\", haskellPrefix' = [], parentModule' = [MName \"Kite\",MName \"Dcm\"], baseName' = FName \"r31\"}, fieldNumber = FieldId {getFieldId = 7}, wireTag = WireTag {getWireTag = 57}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 1}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".kite.Dcm.r32\", haskellPrefix' = [], parentModule' = [MName \"Kite\",MName \"Dcm\"], baseName' = FName \"r32\"}, fieldNumber = FieldId {getFieldId = 8}, wireTag = WireTag {getWireTag = 65}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 1}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".kite.Dcm.r33\", haskellPrefix' = [], parentModule' = [MName \"Kite\",MName \"Dcm\"], baseName' = FName \"r33\"}, fieldNumber = FieldId {getFieldId = 9}, wireTag = WireTag {getWireTag = 73}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 1}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".kite.CarouselState\", haskellPrefix = [], parentModule = [MName \"Kite\"], baseName = MName \"CarouselState\"}, descFilePath = [\"Kite\",\"CarouselState.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".kite.CarouselState.kiteXyz\", haskellPrefix' = [], parentModule' = [MName \"Kite\",MName \"CarouselState\"], baseName' = FName \"kiteXyz\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".kite.Xyz\", haskellPrefix = [], parentModule = [MName \"Kite\"], baseName = MName \"Xyz\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".kite.CarouselState.kiteDcm\", haskellPrefix' = [], parentModule' = [MName \"Kite\",MName \"CarouselState\"], baseName' = FName \"kiteDcm\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".kite.Dcm\", haskellPrefix = [], parentModule = [MName \"Kite\"], baseName = MName \"Dcm\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".kite.CarouselState.delta\", haskellPrefix' = [], parentModule' = [MName \"Kite\",MName \"CarouselState\"], baseName' = FName \"delta\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 25}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 1}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".kite.CarouselState.ddelta\", haskellPrefix' = [], parentModule' = [MName \"Kite\",MName \"CarouselState\"], baseName' = FName \"ddelta\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 33}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 1}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".kite.CarouselState.u0\", haskellPrefix' = [], parentModule' = [MName \"Kite\",MName \"CarouselState\"], baseName' = FName \"u0\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 41}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 1}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".kite.CarouselState.u1\", haskellPrefix' = [], parentModule' = [MName \"Kite\",MName \"CarouselState\"], baseName' = FName \"u1\"}, fieldNumber = FieldId {getFieldId = 6}, wireTag = WireTag {getWireTag = 49}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 1}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".kite.CarouselState.tc\", haskellPrefix' = [], parentModule' = [MName \"Kite\",MName \"CarouselState\"], baseName' = FName \"tc\"}, fieldNumber = FieldId {getFieldId = 7}, wireTag = WireTag {getWireTag = 57}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 1}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False}], enums = [], knownKeyMap = fromList []}"
 
fileDescriptorProto :: FileDescriptorProto
fileDescriptorProto
 = P'.getFromBS (P'.wireGet 11)
    (P'.pack
      "\195\STX\n\nkite.proto\DC2\EOTkite\"&\n\ETXXyz\DC2\t\n\SOHx\CAN\SOH \STX(\SOH\DC2\t\n\SOHy\CAN\STX \STX(\SOH\DC2\t\n\SOHz\CAN\ETX \STX(\SOH\"z\n\ETXDcm\DC2\v\n\ETXr11\CAN\SOH \STX(\SOH\DC2\v\n\ETXr12\CAN\STX \STX(\SOH\DC2\v\n\ETXr13\CAN\ETX \STX(\SOH\DC2\v\n\ETXr21\CAN\EOT \STX(\SOH\DC2\v\n\ETXr22\CAN\ENQ \STX(\SOH\DC2\v\n\ETXr23\CAN\ACK \STX(\SOH\DC2\v\n\ETXr31\CAN\a \STX(\SOH\DC2\v\n\ETXr32\CAN\b \STX(\SOH\DC2\v\n\ETXr33\CAN\t \STX(\SOH\"\138\SOH\n\rCarouselState\DC2\SUB\n\akiteXyz\CAN\SOH \STX(\v2\t.kite.Xyz\DC2\SUB\n\akiteDcm\CAN\STX \STX(\v2\t.kite.Dcm\DC2\r\n\ENQdelta\CAN\ETX \STX(\SOH\DC2\SO\n\ACKddelta\CAN\EOT \STX(\SOH\DC2\n\n\STXu0\CAN\ENQ \STX(\SOH\DC2\n\n\STXu1\CAN\ACK \STX(\SOH\DC2\n\n\STXtc\CAN\a \STX(\SOH")