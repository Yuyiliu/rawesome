package kite;

// By default units are: KG/m/s/rad

message Xyz {
  required double x = 1;
  required double y = 2;
  required double z = 3;
}

// rotation matrix components
message Dcm {
  required double r11 = 1;
  required double r12 = 2;
  required double r13 = 3;

  required double r21 = 4;
  required double r22 = 5;
  required double r23 = 6;

  required double r31 = 7;
  required double r32 = 8;
  required double r33 = 9;
}

message CarouselState {
  // position of kite relative to tip of carousel arm, in carousel arm frame
  required Xyz kiteXyz = 1;
  // rotaton from carousel arm frame to kite frame.
  // positive is counter-clockwise viewed from above.
  required Dcm kiteDcm = 2;
  // carousel arm rotation angle in radians
  required double delta = 3;
  // carousel arm length (should be positive)
  required double rArm = 4;
  // bridle length (should be negative)
  required double zt = 5;
  // list of strings you would like to display on-screen
  repeated string messages = 6;
  // wind at 100 meters altitude in logarithmic wind shear model 
  optional double w0 = 7;
  // transparency: between 0 (invisible) and 1 (fully visible)
  optional double kiteTransparency = 8;
  optional double lineTransparency = 9;
  // how big to draw the kite
  optional double visSpan = 10;
  optional KiteOutputs outputs = 11;
}

message KiteOutputs {
  optional double CL = 1;
  optional double CD = 2;
  optional double L_over_D = 3;
  optional double alpha_deg = 4;
  optional double beta_deg = 5;
  optional double airspeed = 6;
  optional double tension = 7;
  optional double power = 8;
  optional double energy = 9;
  optional double line_angle_deg = 10;
  optional double r = 11;
  optional double dr = 12;
  optional double ddr = 13;
  optional double c = 14;
  optional double cdot= 15;
  optional double aileron_deg = 16;
  optional double elevator_deg = 17;
}

message PendulumOpt {
  repeated double x = 1;
  repeated double z = 2;
  repeated string messages = 3;
}

message MultiCarousel {
  repeated CarouselState css = 1;
  repeated string messages = 2;
  optional CarouselState currentState = 3;
}

message TestMessages {
  required double   a_double = 1;
  required float    a_float = 2;
  required int32    a_int32 = 3;
  required int64    a_int64 = 4;
  required uint32   a_uint32 = 5;
  required uint64   a_uint64 = 6;
  required sint32   a_sint32 = 7;
  required sint64   a_sint64 = 8;
  required fixed32  a_fixed32 = 9;
  required fixed64  a_fixed64 = 10;
  required sfixed32 a_sfixed32 = 11;
  required sfixed64 a_sfixed64 = 12;
  required bool	    a_bool = 13;
  required string   a_string = 14;
  required bytes    a_bytes = 15;
  optional double   a_maybeDouble = 16;
  repeated double   a_repeatedDouble = 17;
}

package MheMpc;
message DifferentialStates {
  required double x = 1;
  required double y = 2;
  required double z = 3;
  required double dx = 4;
  required double dy = 5;
  required double dz = 6;
  required double e11 = 7;
  required double e12 = 8;
  required double e13 = 9;
  required double e21 = 10;
  required double e22 = 11;
  required double e23 = 12;
  required double e31 = 13;
  required double e32 = 14;
  required double e33 = 15;
  required double wx = 16;
  required double wy = 17;
  required double wz = 18;
  required double delta = 19;
  required double ddelta = 20;
  required double ur = 21;
  required double up = 22;
}

message AlgebraicVars {
}

message Controls {
  required double dddelta = 1;
  required double dur = 2;
  required double dup = 3;
}

message Parameters {
}

message Dae {
  required DifferentialStates diffStates = 1;
  required AlgebraicVars algVars = 2;
  required Controls controls = 3;
  required Parameters params = 4;
}

message DaePlus {
  required Dae dae = 1;
  required double kiteTransparency = 2;
  required double lineTransparency = 3;
}

message MheMpcHorizons {
  repeated DaePlus mheHorizon = 1;
  repeated DaePlus mpcHorizon = 2;
  required Dae currentState = 3;
  repeated string messages = 4;
  required double carouselArmHeight = 5;
  required double visSpan = 6;
  required double rArm = 7;
  required double zt = 8;
}
